#!/bin/sh
# $Id: p4-init-env,v 1.11 2001/11/11 02:23:03 friedman Exp $

# Commentary:

# Output proper p4 environment variable settings based on subnet.
# These should be eval'ed by the calling shell.

# Usage: eval `p4-init-env {user} {-shell} {--override|--no-override}`
#
# user           Set P4USER to this user.
# -shell         Emit shell's syntax for setting variables (e.g. "-tcsh")
# --override     indicates that P4* variables will be redefined even if
#                they are already present in the environment.
# --no-override  Any P4* variable already inherited from the environment
#                will not be overridden.

# Code:

PATH=$PATH:/usr/ucb
export PATH

uid=`whoami`
user=${USER-${LOGNAME-$uid}}
hostname=${HOSTNAME-`hostname`}
hostname=`echo "$hostname" | sed -e 's/\..*//'`
shell=$SHELL

opt_user=
overridep=f
while : ; do
  case $# in 0) break ;; esac
  case "$1" in
    --override    ) overridep=t ; shift ;;
    --no-override ) overridep=f ; shift ;;
    -*            ) shell=$1    ; shift ;;
    *             ) opt_user=$1 ; shift ;;
  esac
done

# Set P4USER only if not already set, or override was specified.
case "$overridep:${P4USER+set}:$opt_user" in
  t:*:?* | f::?* )   P4USER=$opt_user ;;
  t:*:   | f:: )     P4USER=$user     ;;
esac

case "$overridep:${P4CLIENT+set}" in
  t:* | f: ) P4CLIENT=$uid.$hostname ;;
esac

case "$overridep:${P4PORT+set}" in
  t:* | f: )
    # Determine subnet based on default route gateway
    subnet=`netstat -rn \
             | sed -n -e '/^default/b p' \
                      -e '/^0\.0\.0\.0/b p' \
                      -e d \
                      -e :p \
                      -e 's/[ 	][ 	]*/ /g' \
                      -e 's/^[^ ]* //' \
                      -e 's/ .*//' \
                      -e p -e q`

    case "$subnet" in
      192.168.1.* )         P4PORT=localhost ;; # prv.splode.com proxy

      # Production search clusters
      209.1.12.1 )          P4PORT=onyx      ;; # sc1-2
      209.185.141.1 )       P4PORT=juniper   ;; # sc3
      64.75.36.1 )          P4PORT=hematite  ;; # sc4/2k, search

      66.196.9[789].1 )     P4PORT=ruby      ;;
      205.188.182.253 \
      | 205.188.183.6[12] \
      | 205.188.184.254 )   P4PORT=sapphire  ;; # va3/4
      205.188.183.94 )      P4PORT=topaz     ;; # va5 admin
      205.188.183.254 )     P4PORT=topaz     ;; # va5 search nodes

      62.172.199.1 )        P4PORT=beryl     ;; # uk1
      213.216.143.1 )       P4PORT=ibex      ;; # uk2

      216.35.11[678].1 )    P4PORT=feldspar  ;; # gigadoc
      209.185.122.1 )       P4PORT=amber     ;; # mini cluster
      209.202.174.161 )     P4PORT=cb-admin  ;; # cb2
      211.169.241.1 )       P4PORT=kyanite   ;; # kr1
      202.212.5.1 )         P4PORT=pearl     ;; # jp1
      210.172.228.129 )     P4PORT=lapis     ;; # jp2
      209.185.143.1 )       P4PORT=juniper   ;; # j4k

      # Commerce nets; obsolete?
      64.41.217.1 )         P4PORT=diamond   ;; # congo
      64.75.7.1 )           P4PORT=dilithium ;; # sc4/2k, commerce beta
      64.75.8.1 )           P4PORT=juniper   ;; # sc4/2k, commerce production
      209.185.142.1 )       P4PORT=cryolite  ;; # congo
      213.216.144.1 )       P4PORT=erythrite ;; # uk/exodus shopping

      209.131.*.1 )         P4PORT=juniper   ;; # intranet
      * )                   P4PORT=juniper   ;; # default
    esac

    # Append default tcp port if missing.
    case "$P4PORT" in
      *:* ) : ;;
      * ) P4PORT=$P4PORT:1666 ;;
    esac
   ;;
esac

# Emit the right syntax based on login shell.
case "$shell" in
  *[/-]* )
    shell=`echo "$shell" \
            | sed -e '/\//s=^.*/==' \
                  -e '/^-/s/^-//'`
   ;;
esac

case "$shell" in
  csh | tcsh )
    echo "setenv P4USER   $P4USER;"
    echo "setenv P4PORT   $P4PORT;"
    echo "setenv P4CLIENT $P4CLIENT;"
   ;;
  perl )
    echo '$ENV{P4USER}="'"$P4USER"'";'
    echo '$ENV{P4PORT}="'"$P4PORT"'";'
    echo '$ENV{P4CLIENT}="'"$P4CLIENT"'";'
   ;;
  gdb )
    echo "set environment P4USER   $P4USER"
    echo "set environment P4PORT   $P4PORT"
    echo "set environment P4CLIENT $P4CLIENT"
   ;;
  emacs | rep | sawfish | clisp | scsh | guile )
    progn="progn"
    setenv="setenv"
    case "$shell" in
      scsh | guile ) progn="begin"           ;;
      clisp )        setenv="system::setenv" ;;
    esac
    echo "($progn"
    echo "  ($setenv \"P4USER\"   \"$P4USER\")"
    echo "  ($setenv \"P4PORT\"   \"$P4PORT\")"
    echo "  ($setenv \"P4CLIENT\" \"$P4CLIENT\"))"
   ;;
  * ) # sh, ksh, bash, zsh, es, rc; others?
    echo "P4USER=$P4USER;"
    echo "P4PORT=$P4PORT;"
    echo "P4CLIENT=$P4CLIENT;"
    case "$shell" in
      es | rc ) : ;;
      * ) echo "export P4USER P4PORT P4CLIENT;" ;;
    esac
  ;;
esac

# p4-init-env ends here.
