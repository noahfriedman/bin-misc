#!/usr/bin/env bash

# Requires python-eyed3 0.7.5 or later fedora rpm for mp3 files
# Requires metaflac for flac files

apush()    { eval "$1=(\"\${$1[@]}\" \"\${@:2}\")"; }
aunshift() { eval "$1=(\"\${@:2}\" \"\${$1[@]}\")"; }

######
## mp3
######

eyed3()
{
    set eyeD3 "$@"
    case $VERBOSE in
        '' ) "$@" ;;
        *  ) (set -x; "$@") ;;
    esac
}

info_mp3()
{
    track=$1
    file=`file_template "$track"`

    # Can't use these two options together.
    # Don't use our eye3d function above.
    eyeD3 -v          "$file"
    eyeD3 -P lameinfo "$file"
}

label_mp3()
{
    track=$1
    title=$2
    shift; shift

    declare -a args=(
        --encoding       utf16
        --remove-v1
        --to-v2.3
        --artist         "$author"
        --album          "$album"
        --disc-num       "$disc"
        --disc-total     "$disc_total"
        --track          "$track"
        --track-total    "$track_total"
        --title          "$title"
    )
    case $year      in ?* ) apush args --recording-date "$year" ;; esac
    case $genre     in ?* ) apush args --genre         "$genre" ;; esac
    case $publisher in ?* ) apush args --publisher "$publisher" ;; esac

    comment=$defcomment
    comment_empty=
    case ${1+isset}:$1 in
        isset:-* | : ) : ;;
        isset:   )
            comment=
            comment_empty=t
            shift ;;
        isset:?* )
            comment=$1
            shift ;;
    esac
    case $comment_empty:$comment in
        t: | :?* ) aunshift args --comment="$comment" ;;
    esac

    file=`file_template "$track"`
    touch -r "$file" .stamp

    echo ----------------------------------------
    echo "$file"
    {
        if [[ ${#reset_tags[@]} -gt 0 ]]; then
            declare -a reset_args=()
            for tag in "${reset_tags[@]}" ; do
                case $tag in
                    TXXX:* ) apush reset_args --user-text-frame "${tag#TXXX:}": ;;
                    APIC   ) apush reset_args --remove-images ;;
                    *      ) apush reset_args --text-frame "$tag:" ;;
                esac
            done
            eyed3 "${reset_args[@]}" "$file"
        fi

        declare -a tags=(
            "$front_cover_image:FRONT_COVER:"
            "$back_cover_image:BACK_COVER:"
            "$leaflet_image:LEAFLET:"
            "$other_image:OTHER:" )
        for field in "${tags[@]}"; do
            case $field in
                :*: ) : ;;
                *   ) apush args --add-image="$field" ;;
            esac
        done

        eyed3 "${args[@]}" "$@" "$file"
    } > /dev/null

    touch -r .stamp "$file"
    rm -f .stamp
}

rename_mp3()
{
    track=$1
    old=`file_template "$track"`

    fmt="%A - %a`discstr` - %n - %t"

    echo ----------------------------------------
    echo "$old"
    {
        eyed3 -v \
            --rename      "$fmt" \
            --fs-encoding "utf8" \
            "$old"
    } > /dev/null
}

######
## flac
######

declare -a args=()
declare -A add_tag_flag=(
    [flac]=--set-tag
     [ogg]=--tag
)

# This is used by both flac and ogg
init_vorbis_args()
{
    declare set_tag=${add_tag_flag[${1-flac}]}

    args=()
    declare -a tags=(      "ARTIST=$author"
                            "ALBUM=$album"
                            "TITLE=$title"
                             "DATE=$year"
                            "GENRE=$genre"

                         "ARRANGER=$arranger"
                        "CONDUCTOR=$conductor"
                         "ENSEMBLE=$ensemble"
                         "LOCATION=$location"

                      "TRACKNUMBER=$track"
                       "TRACKTOTAL=$track_total"
                       "DISCNUMBER=$disc"
                        "DISCTOTAL=$disc_total"

                            "LABEL=$record_label"
                          "LABELNO=$record_label_id"

                      "${extra_tags[@]}" )
    for tag in "${reset_tags[@]}" ; do
        apush args --remove-tag "$tag"
    done

    declare -A seen=()
    for elt in "${tags[@]}"; do
        tag=${elt%%=*}
        data=${elt#*=}

        case ${seen[$tag]+isset} in
            '' ) seen[$tag]=t
                 apush args --remove-tag "$tag" ;;
        esac
        case ${data:+nonempty} in
            nonempty ) apush args $set_tag "$elt" ;;
        esac
    done
}

info_flac()
{
    track=$1
    file=`file_template "$track"`

    echo "$file:"
    #metaflac --export-tags-to - "$file"
    # This is less ambiguous when there are newlines embedded in tags data.
    metaflac --list --block-type=VORBIS_COMMENT "$file" |
        sed -e '1,/comments:/d' -e 's/\[\([0-9]\)]/[ \1]/'
    echo
}

label_flac()
{
    track=$1
    title=$2
    shift; shift

    file=`file_template "$track"`

    init_vorbis_args flac

    declare -a tags=( "3||||$front_cover_image"
                      "4||||$back_cover_image"
                      "5||||$leaflet_image"
                      "6||||$media_image"
                      "0||||$other_image" )
    for field in "${tags[@]}"; do
        case $field in
            ?"||||"?* ) apush args --import-picture-from "$field" ;;
        esac
    done

    echo "Tagging: $file"
    metaflac --preserve-modtime --dont-use-padding "$@" "${args[@]}" "$file"
}

rename_flac()
{
    rename_generic "$@"
}

######
## ogg/vorbis
######

info_ogg()
{
    track=$1
    file=`file_template "$track"`

    echo "$file:"
    vorbiscomment --raw --list "$file"
    echo
}

label_ogg()
{
    track=$1
    title=$2
    shift; shift

    file=`file_template "$track"`

    init_vorbis_args ogg

    echo "Tagging: $file"
    vorbiscomment --write --raw "$@" "${args[@]}" "$file"
}

rename_ogg()
{
    rename_generic "$@"
}

######
##
######

file_template()
{
    file_author=`file_filter "$author"`
     file_album=`file_filter "$album"`

     declare -a pats=(
         $file_author.$file_album?$disc:$1.*.$ext
         track$disc:$1.*.$ext
         track_$disc:$1.$ext
         $disc:$1-*.$ext
         $disc:$1.*.$ext
         "$disc:$1 "*.$ext
         *" - $disc:$1 - "*.$ext
         *" - "*:$disc:$1" "*.$ext
         *.$disc:$1.*.$ext
         *-$disc:$1-*.$ext
         *_$disc:$1_*.$ext
         *" $disc:$1 "*.$ext
         *" $disc:$1".$ext


         $file_author.$file_album?$1.*.$ext
         track$1.*.$ext
         track_$1.$ext
         $1-*.$ext
         $1.*.$ext
         "$1 "*.$ext
         *" - $1 - "*.$ext
         *" - "*:$1" "*.$ext
         *.$1.*.$ext
         *-$1-*.$ext
         *_$1_*.$ext
         *" $1 "*.$ext
         *" $1".$ext
     )

    for f in "${pats[@]}"; do
        if [ -f "$f" ]; then
            echo "$f"
            return
        fi
    done
}

file_filter()
{
    echo "$*" \
        | sed -e "s/  *$//" \
              -e "s=/=_=g"
}

discstr()
{
    discstr=
    case $disc:$disc_total in
        : | 1:1 | 01:01 ) : ;;
        *:  ) echo   " (disc $disc)" ;;
        *:* ) printf " (disc %0${#disc_total}d of %d)" $disc $disc_total ;;
    esac
}

rename_generic()
{
    track=$1
    title=$2

    albumstr=$album #`discstr`

    old=`file_template "$track"`
    case $disc_total in
        '' | 1 | 01 ) new=`file_filter "$author - $albumstr - $track - $title.$ext"`       ;;
        * )           new=`file_filter "$author - $albumstr - $disc:$track - $title.$ext"` ;;
    esac

    # Quoting matters here, if $old contains wildcard chars!
    case $new in
        "$old" ) : ;;
        *      ) mv -v "$old" "$new" ;;
    esac
}

######
##
######

info()   {      info_$ext "$@"; }
label()  {     label_$ext "$@"; }
rename() { rename_generic "$@"; }

######
##
######

config()
{
                      ############################## ID3v1 length
               author=""
                album=""

                 year=
                genre=
            publisher=
           defcomment=  # mp3 only

          track_total=01

                 disc=01
           disc_total=01

    # vorbis-only  (including flac)
             arranger=
            conductor=
             ensemble=
             location=
         record_label=
      record_label_id=
           extra_tags=()  # "TAGNAME=text ..." TAGNAME can be repeated
    # /vorbis-only

    front_cover_image=
     back_cover_image=
        leaflet_image=
          media_image=
          other_image=

    # These are useful if you want to get rid of the track total or disc
    # total, which will not be removed if it already exists, even if the
    # explicit replacement is empty.
           reset_tags=() # (TPOS TRCK)

                  ext=mp3
}

doit()
{ :
  #for n in `seq -w 01 $track_total`; do $1 $n "Part $n"; done

           ##############################
   #$1 01 "Example Title"
}

main()
{
    LC_CTYPE=${LC_CTYPE-en_US.UTF-8}
    export LC_CTYPE

    config
    case $ext in
        mp3  ) type -p eyeD3    > /dev/null || exit $? ;;
        flac ) type -p metaflac > /dev/null || exit $? ;;
    esac

    case $# in
        0 ) set label rename ;;
    esac

    set -e
    for step in "$@"; do
        doit $step
    done
}

#main "$@"

# eof
