#! /bin/sh
# next-uid --- find the next N unused uids available in passwd file
# Author: Noah Friedman <friedman@prep.ai.mit.edu>
# Created: 1992-12-04
# Public domain

# $Id$

# Commentary:

# Find the next n unused uids available in the passwd file, and print them
# on stdout.  "n" defaults to 1 if not specified.  Usage: next-uid [n].

# Code:

# # Uid range to search in.  This is all of the space allocated to us (the
# # rest of it is used by other groups at MIT) --friedman
# range="9000-9999,31000-32000"

range='500-1000'

passwd_file="/etc/passwd"

# Print the next n available uids.
howmany="$1"
if [ -z "${howmany}" ]; then
   howmany=1
fi

if [ -z "${range}" ]; then
   # If no range was specified, don't look any higher than the number
   # of lines in the passwd file.  Either all the uids will be in use
   # or we'll find a hole somewhere.
   set fnord `wc -l "${passwd_file}"`
   shift
   range="0-${1}"
fi

gawk '
   BEGIN {
      FS=":"
      highest_in_range = 0
   }

   {
    # Hash uid
    passwd[$3] = ""
   }

   END {
      # Construct range table
      while (range) {
         comma = match(range, ",")
         if (comma)
            subrange = substr(range, 0, comma - 1)
         else
            subrange = range

         hyphen = match(subrange, "-")
         low = subrange
         hi = ""
         if (hyphen) {
            low = substr(subrange, 0, hyphen - 1);
            hi = substr(subrange, hyphen + 1);
            if (hi && hi > highest_in_range)
                highest_in_range = hi
         }
         ranges[low] = hi
         if (comma)
            range = substr(range, comma + 1)
         else
            range = ""
      }

      # Construct uid space table
      for (idx in ranges)
         if (ranges[idx])
            for (i = idx; i <= ranges[idx]; i++)
               uid[i] = ""
         else
            uid[idx] = ""

      # Now go through and eliminate any that correspond to entries in passwd
      # array.
      for (idx in passwd)
         delete uid[idx]

      # Print the rest of them.
      for (idx in uid)
         print idx;

   }' range="$range" "$passwd_file" \
 | sort -n | sed -n "1,${howmany}p"

# next-uid ends here
