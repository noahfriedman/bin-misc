#!/usr/bin/env perl
# $Id: scrab,v 1.1 2006/06/26 08:07:21 friedman Exp $

$^W = 1;

use strict;

my $dictfile = $ENV{SCRABDICT} || "/usr/share/dict/words";

my %letter_frequency
  = ( a =>  9,    k =>  1,    u =>  4,
      b =>  2,    l =>  4,    v =>  2,
      c =>  2,    m =>  2,    w =>  2,
      d =>  4,    n =>  6,    x =>  1,
      e => 12,    o =>  8,    y =>  2,
      f =>  2,    p =>  2,    z =>  1,
      g =>  3,    q =>  1,    _ =>  2,
      h =>  2,    r =>  6,
      i =>  9,    s =>  4,
      j =>  1,    t =>  6, );

my %letter_score
  = ( a =>  1,    k =>  5,    u =>  1,
      b =>  3,    l =>  1,    v =>  4,
      c =>  3,    m =>  3,    w =>  4,
      d =>  2,    n =>  1,    x =>  8,
      e =>  1,    o =>  1,    y =>  4,
      f =>  4,    p =>  3,    z => 10,
      g =>  2,    q => 10,    _ =>  0,
      h =>  4,    r =>  1,
      i =>  1,    s =>  1,
      j =>  8,    t =>  1, );

sub score
{
  my @let;

  if (@_ > 1) { @let = @_ }
  elsif (ref $_[0] eq 'HASH')
    { @let = map { ($_) x $_[0]->{$_} } keys %{$_[0]} }
  else { @let = split (//, $_[0]) }

  my $sc = 0;
  map { $sc += $letter_score{$_} } @let;
  return $sc;
}

sub letfreq
{
  my @let = split (//, lc shift);
  my %freq;
  map { $freq{$_}++ } @let;
  return \%freq;
}

# Return 1 if a is a subset of b
sub subset
{
  my ($a, $b) = @_;

  while (my ($l, $f) = each %$a)
    {
      return 0 unless ($b->{$l} || 0) >= $f;
    }
  return 1;
}

sub main
{
  my $ifreq = letfreq ($_[0]);
  my @list;

  open (F, $_[2] || $dictfile);
  my %match;
  while (<F>)
    {
      next if length ($_) < 4; # includes NL, so skip 1-2 letter words
      next if ($_[1] && ! /$_[1]/io);
      chop;
      my $freq = letfreq ($_);
      $match{lc $_} = 1 if subset ($freq, $ifreq);
    }

  map { printf "%3d  %s\n", score ($_), $_ }
      sort { length $a <=> length $b || $a cmp $b }
           keys %match;
}

main (@ARGV);

# eof
